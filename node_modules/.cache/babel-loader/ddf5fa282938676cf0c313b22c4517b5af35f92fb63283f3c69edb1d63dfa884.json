{"ast":null,"code":"var _jsxFileName = \"/Users/hechengxin/Desktop/First-Order-Rule-Learner/FOIL/src/main/frontend/foil-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [param1, setParam1] = useState('');\n  const [param2, setParam2] = useState('');\n  const [param3, setParam3] = useState('');\n  const [response, setResponse] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [additionalParams, setAdditionalParams] = useState(''); // New state for additional parameters\n\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  const handleSubmit = async () => {\n    setIsLoading(true);\n    const formData = new FormData();\n    formData.append('file', file);\n\n    // Parsing the additionalParams to append to the URL\n    const params = additionalParams.split(',').map(p => `args=${p.trim()}`).join('&');\n    try {\n      const res = await fetch(`http://localhost:8080/upload?args=${param1}&args=${param2}&${params}&args=${param3}`, {\n        method: 'POST',\n        body: formData\n      });\n      const result = await res.text();\n      setResponse(result);\n    } catch (error) {\n      console.error('Error uploading file:', error);\n      setResponse('Error uploading file: ' + error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Upload File:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Parameter 1:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Enter value for Param 1\",\n        value: param1,\n        onChange: e => setParam1(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Parameter 2:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Enter value for Param 2\",\n        value: param2,\n        onChange: e => setParam2(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Additional Parameters (comma separated):\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Enter comma separated values\",\n        value: additionalParams,\n        onChange: e => setAdditionalParams(e.target.value),\n        rows: \"3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Parameter 3:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Enter value for Param 3\",\n        value: param3,\n        onChange: e => setParam3(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      className: \"response-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Response:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), \" \", response]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"CyTvLzJn3Lx0a5jXYfrn7tgUz10=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","file","setFile","param1","setParam1","param2","setParam2","param3","setParam3","response","setResponse","isLoading","setIsLoading","additionalParams","setAdditionalParams","handleFileChange","event","target","files","handleSubmit","formData","FormData","append","params","split","map","p","trim","join","res","fetch","method","body","result","text","error","console","message","className","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","e","rows","onClick","_c","$RefreshReg$"],"sources":["/Users/hechengxin/Desktop/First-Order-Rule-Learner/FOIL/src/main/frontend/foil-frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [file, setFile] = useState(null);\n  const [param1, setParam1] = useState('');\n  const [param2, setParam2] = useState('');\n  const [param3, setParam3] = useState('');\n  const [response, setResponse] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [additionalParams, setAdditionalParams] = useState('');  // New state for additional parameters\n\n\n\n    const handleFileChange = (event) => {\n    setFile(event.target.files[0]);\n  };\n\n    const handleSubmit = async () => {\n        setIsLoading(true);\n\n        const formData = new FormData();\n        formData.append('file', file);\n\n        // Parsing the additionalParams to append to the URL\n        const params = additionalParams.split(',')\n            .map(p => `args=${p.trim()}`)\n            .join('&');\n\n        try {\n            const res = await fetch(`http://localhost:8080/upload?args=${param1}&args=${param2}&${params}&args=${param3}`, {\n                method: 'POST',\n                body: formData,\n            });\n\n            const result = await res.text();\n            setResponse(result);\n        } catch (error) {\n            console.error('Error uploading file:', error);\n            setResponse('Error uploading file: ' + error.message);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"App\">\n            <label>\n                Upload File:\n                <input type=\"file\" onChange={handleFileChange} />\n            </label>\n\n            <label>\n                Parameter 1:\n                <input placeholder=\"Enter value for Param 1\" value={param1} onChange={(e) => setParam1(e.target.value)} />\n            </label>\n\n            <label>\n                Parameter 2:\n                <input placeholder=\"Enter value for Param 2\" value={param2} onChange={(e) => setParam2(e.target.value)} />\n            </label>\n\n            <label>\n                Additional Parameters (comma separated):\n                <textarea\n                    placeholder=\"Enter comma separated values\"\n                    value={additionalParams}\n                    onChange={(e) => setAdditionalParams(e.target.value)}\n                    rows=\"3\"\n                />\n            </label>\n\n            <label>\n                Parameter 3:\n                <input placeholder=\"Enter value for Param 3\" value={param3} onChange={(e) => setParam3(e.target.value)} />\n            </label>\n\n            <button onClick={handleSubmit}>Upload</button>\n\n            {isLoading && <div>Loading...</div>}\n            <pre className=\"response-box\">\n                <strong>Response:</strong> {response}\n            </pre>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACiB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAE;;EAI7D,MAAMmB,gBAAgB,GAAIC,KAAK,IAAK;IACpCd,OAAO,CAACc,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAChC,CAAC;EAEC,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7BP,YAAY,CAAC,IAAI,CAAC;IAElB,MAAMQ,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAErB,IAAI,CAAC;;IAE7B;IACA,MAAMsB,MAAM,GAAGV,gBAAgB,CAACW,KAAK,CAAC,GAAG,CAAC,CACrCC,GAAG,CAACC,CAAC,IAAK,QAAOA,CAAC,CAACC,IAAI,CAAC,CAAE,EAAC,CAAC,CAC5BC,IAAI,CAAC,GAAG,CAAC;IAEd,IAAI;MACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,qCAAoC3B,MAAO,SAAQE,MAAO,IAAGkB,MAAO,SAAQhB,MAAO,EAAC,EAAE;QAC3GwB,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEZ;MACV,CAAC,CAAC;MAEF,MAAMa,MAAM,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,CAAC;MAC/BxB,WAAW,CAACuB,MAAM,CAAC;IACvB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CzB,WAAW,CAAC,wBAAwB,GAAGyB,KAAK,CAACE,OAAO,CAAC;IACzD,CAAC,SAAS;MACNzB,YAAY,CAAC,KAAK,CAAC;IACvB;EACJ,CAAC;EAED,oBACId,OAAA;IAAKwC,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChBzC,OAAA;MAAAyC,QAAA,GAAO,cAEH,eAAAzC,OAAA;QAAO0C,IAAI,EAAC,MAAM;QAACC,QAAQ,EAAE1B;MAAiB;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eAER/C,OAAA;MAAAyC,QAAA,GAAO,cAEH,eAAAzC,OAAA;QAAOgD,WAAW,EAAC,yBAAyB;QAACC,KAAK,EAAE5C,MAAO;QAACsC,QAAQ,EAAGO,CAAC,IAAK5C,SAAS,CAAC4C,CAAC,CAAC/B,MAAM,CAAC8B,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvG,CAAC,eAER/C,OAAA;MAAAyC,QAAA,GAAO,cAEH,eAAAzC,OAAA;QAAOgD,WAAW,EAAC,yBAAyB;QAACC,KAAK,EAAE1C,MAAO;QAACoC,QAAQ,EAAGO,CAAC,IAAK1C,SAAS,CAAC0C,CAAC,CAAC/B,MAAM,CAAC8B,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvG,CAAC,eAER/C,OAAA;MAAAyC,QAAA,GAAO,0CAEH,eAAAzC,OAAA;QACIgD,WAAW,EAAC,8BAA8B;QAC1CC,KAAK,EAAElC,gBAAiB;QACxB4B,QAAQ,EAAGO,CAAC,IAAKlC,mBAAmB,CAACkC,CAAC,CAAC/B,MAAM,CAAC8B,KAAK,CAAE;QACrDE,IAAI,EAAC;MAAG;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAER/C,OAAA;MAAAyC,QAAA,GAAO,cAEH,eAAAzC,OAAA;QAAOgD,WAAW,EAAC,yBAAyB;QAACC,KAAK,EAAExC,MAAO;QAACkC,QAAQ,EAAGO,CAAC,IAAKxC,SAAS,CAACwC,CAAC,CAAC/B,MAAM,CAAC8B,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvG,CAAC,eAER/C,OAAA;MAAQoD,OAAO,EAAE/B,YAAa;MAAAoB,QAAA,EAAC;IAAM;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAE7ClC,SAAS,iBAAIb,OAAA;MAAAyC,QAAA,EAAK;IAAU;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACnC/C,OAAA;MAAKwC,SAAS,EAAC,cAAc;MAAAC,QAAA,gBACzBzC,OAAA;QAAAyC,QAAA,EAAQ;MAAS;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAACpC,QAAQ;IAAA;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAAC7C,EAAA,CAlFQD,GAAG;AAAAoD,EAAA,GAAHpD,GAAG;AAoFZ,eAAeA,GAAG;AAAC,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}